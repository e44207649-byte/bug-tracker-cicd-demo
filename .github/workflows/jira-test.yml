name: 🧪 Jira Integration Test

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-jira:
    name: 🧪 Test Jira API
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🔍 Debug Environment
        run: |
          echo "Curl version:"
          curl --version
          echo "Testing basic connectivity to Atlassian..."
          curl -I https://itdemo.atlassian.net || echo "Failed to reach Atlassian"
        
      - name: 🧪 Test Jira Connection
        run: |
          echo "Testing Jira connection..."
          echo "Base URL: ${{ secrets.JIRA_BASE_URL }}"
          echo "User Email: ${{ secrets.JIRA_USER_EMAIL }}"
          
          # Normalize URL (remove trailing slash)
          JIRA_URL="${{ secrets.JIRA_BASE_URL }}"
          JIRA_URL=${JIRA_URL%/}  # Remove trailing slash if present
          echo "Normalized URL: $JIRA_URL"
          
          # Create base64 auth header with no line breaks
          AUTH_HEADER=$(echo -n '${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' | base64 -w 0)
          echo "Auth header created successfully"
          
          # Test API endpoint with proper headers
          echo "Testing Jira API endpoint..."
          echo "Full URL: $JIRA_URL/rest/api/2/myself"
          curl -v \
            -H "Accept: application/json" \
            -H "Authorization: Basic $AUTH_HEADER" \
            "$JIRA_URL/rest/api/2/myself" \
            -o /tmp/jira_test.json
          
          echo "Response from Jira API:"
          cat /tmp/jira_test.json
          
      - name: 🎫 Check if DEMO-2 Issue Exists
        run: |
          echo "Checking if DEMO-2 issue exists..."
          
          # Normalize URL (remove trailing slash)
          JIRA_URL="${{ secrets.JIRA_BASE_URL }}"
          JIRA_URL=${JIRA_URL%/}  # Remove trailing slash if present
          
          # Create base64 auth header with no line breaks
          AUTH_HEADER=$(echo -n '${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' | base64 -w 0)
          
          # Check if issue exists
          echo "Issue URL: $JIRA_URL/rest/api/2/issue/DEMO-2"
          curl -v \
            -H "Accept: application/json" \
            -H "Authorization: Basic $AUTH_HEADER" \
            "$JIRA_URL/rest/api/2/issue/DEMO-2" \
            -o /tmp/issue_check.json || echo "Issue check failed"
          
          echo "Issue check response:"
          cat /tmp/issue_check.json 2>/dev/null || echo "(no response)"
          
      - name: 📋 List Available Projects
        run: |
          echo "Listing available projects..."
          
          # Normalize URL (remove trailing slash)
          JIRA_URL="${{ secrets.JIRA_BASE_URL }}"
          JIRA_URL=${JIRA_URL%/}  # Remove trailing slash if present
          
          # Create base64 auth header with no line breaks
          AUTH_HEADER=$(echo -n '${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' | base64 -w 0)
          
          # Get projects list
          echo "Projects URL: $JIRA_URL/rest/api/2/project"
          curl -v \
            -H "Accept: application/json" \
            -H "Authorization: Basic $AUTH_HEADER" \
            "$JIRA_URL/rest/api/2/project" \
            -o /tmp/projects.json || echo "Projects check failed"
          
          echo "Available projects:"
          cat /tmp/projects.json 2>/dev/null || echo "(no response)"
          
      - name: 🎯 Test Comment Creation
        run: |
          echo "Testing comment creation on DEMO-2..."
          
          # Normalize URL (remove trailing slash)
          JIRA_URL="${{ secrets.JIRA_BASE_URL }}"
          JIRA_URL=${JIRA_URL%/}  # Remove trailing slash if present
          
          # Create base64 auth header with no line breaks
          AUTH_HEADER=$(echo -n '${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' | base64 -w 0)
          
          # Test comment creation
          echo "Comment URL: $JIRA_URL/rest/api/2/issue/DEMO-2/comment"
          curl -v -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $AUTH_HEADER" \
            -d '{"body": "Test comment from GitHub Actions - Fixed Authentication"}' \
            "$JIRA_URL/rest/api/2/issue/DEMO-2/comment" \
            -o /tmp/comment_response.json
          
          echo "Comment response:"
          cat /tmp/comment_response.json
          
      - name: 🔍 Test Different Approaches
        run: |
          echo "Testing different curl approaches..."
          
          # Normalize URL (remove trailing slash)
          JIRA_URL="${{ secrets.JIRA_BASE_URL }}"
          JIRA_URL=${JIRA_URL%/}  # Remove trailing slash if present
          
          # Create base64 auth header with no line breaks
          AUTH_HEADER=$(echo -n '${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' | base64 -w 0)
          
          # Test 1: Simple GET request first
          echo "=== Test 1: Simple GET request ==="
          curl -v \
            -H "Accept: application/json" \
            -H "Authorization: Basic $AUTH_HEADER" \
            "$JIRA_URL/rest/api/2/issue/DEMO-2" || echo "GET failed"
          
          # Test 2: POST with minimal payload
          echo "=== Test 2: POST with minimal payload ==="
          curl -v -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $AUTH_HEADER" \
            --data-raw '{"body":"Simple test"}' \
            "$JIRA_URL/rest/api/2/issue/DEMO-2/comment" || echo "Simple POST failed"
          
          # Test 3: POST with file
          echo "=== Test 3: POST with file ==="
          echo '{"body":"Test from file"}' > /tmp/test_payload.json
          curl -v -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $AUTH_HEADER" \
            --data @/tmp/test_payload.json \
            "$JIRA_URL/rest/api/2/issue/DEMO-2/comment" || echo "File POST failed"